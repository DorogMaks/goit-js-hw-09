{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,QAASC,SAASC,cAAc,SAChCC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,kBAAmBL,SAASC,cAAc,0BAS5C,SAASK,EAAcC,EAAUC,GAY/B,OAXgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAfPV,EAAKC,QAAQgB,aAAa,MAAO,KACjCjB,EAAKI,WAAWa,aAAa,OAAQ,OACrCjB,EAAKK,UAAUY,aAAa,OAAQ,OAEpCjB,EAAKO,kBAAkBW,iBAAiB,SAiBxC,SAAkCC,GAChCA,EAAIC,iBAMJ,IAJA,IAAIC,EAAaC,OAAOtB,EAAKI,WAAWmB,OACpCC,EAAYF,OAAOtB,EAAKK,UAAUkB,OAChCE,EAASH,OAAOtB,EAAKM,YAAYiB,OAE9BG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BlB,EAAc,EAAIkB,EAAGL,EAAaK,EAAIF,GACnCG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA/B,GAASgC,OAAOI,QACd,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,a","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  inputEl: document.querySelector('input'),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  btnCreatePromises: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.inputEl.setAttribute('min', '0');\nrefs.inputDelay.setAttribute('step', '250');\nrefs.inputStep.setAttribute('step', '250');\n\nrefs.btnCreatePromises.addEventListener('click', onBtnCreatePromisesClick);\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nfunction onBtnCreatePromisesClick(evt) {\n  evt.preventDefault();\n\n  let firstDelay = Number(refs.inputDelay.value);\n  let delayStep = Number(refs.inputStep.value);\n  const amount = Number(refs.inputAmount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","inputEl","document","querySelector","inputDelay","inputStep","inputAmount","btnCreatePromises","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","setAttribute","addEventListener","evt","preventDefault","firstDelay","Number","value","delayStep","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.95ed5044.js.map"}